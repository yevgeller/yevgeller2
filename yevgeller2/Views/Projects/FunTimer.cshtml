
@{
    ViewBag.Title = "FunTimer";
}

<h2>Track the fun and work time here.</h2>
<div>The local time is: <span id="localTime"></span></div>
<button id="startWork" onclick="startWork()" class="btn">Start working</button>
<button id="startFun" onclick="startFun()" class="btn">Start fun</button>
<button id="resetButton" onclick="resetTimers()" class="btn">Reset timers</button>
<div id="time" style="color:red"></div>
<div id="time2" style="color:green"></div>
<div id="result" style="color:blue"></div>
<div id="totalSeconds" style="color:aqua"></div>

@section scripts
{
    <script type="text/javascript">
        var timer;
        var record = initEmptyRecord();
        var records = [];
        var totalSeconds;

        $(document).ready(function () {
            setInterval(function () {
                document.getElementById("localTime").innerHTML = (new Date()).toLocaleTimeString();
            })
        });

        function startTimer() {
            totalSeconds = 0;
            timer = setInterval(function () {
                totalSeconds++;
                var t = document.getElementById("time2");
                var text = "Have been ";
                if (record.rType == "Work") {
                    text += "working";
                } else if (record.rType == "Fun") {
                    text += "slacking off";
                } else {
                    text += "doing something else";
                }
                text += " for " + convertSecondsIntoTimerString(totalSeconds);
                t.innerHTML = text;
            }, 1000);
        }

        function stopTimer() {
            clearInterval(timer);
        }

        function convertSecondsIntoTimerString(numberOfSeconds) {
            var result = "";

            var hours = Math.floor(numberOfSeconds / 3600);
            if (hours > 0) { result += hours + " h "; }

            var minutes = Math.floor((numberOfSeconds - (hours * 3600)) / 60);
            if (minutes > 0) { result += minutes + " m "; }

            result += (numberOfSeconds % 60 + " s");

            return result;
        }

        function initEmptyRecord() {
            var ret = {};
            ret.rType = "";
            ret.start = new Date(0);
            ret.end = new Date(0);
            ret.durationString = "";
            ret.durationSeconds = 0;
            return ret;
        }

        function startWork() {
            $("#startWork").prop("disabled", true);
            $('#startFun').prop("disabled", false);
            processRecord("Work");
        }

        function startFun() {
            $("#startWork").prop("disabled", false);
            $('#startFun').prop("disabled", true);
            processRecord("Fun");
        }

        function displayRecords() {
            var result = "";
            for (var i = 0; i < records.length; i++) {
                var startDt = new Date(records[i].start);
                var endDt = new Date(records[i].end);
                result += startDt.toLocaleTimeString() + "-" + endDt.toLocaleTimeString() +
                    "; " + records[i].rType + " for " + records[i].durationString + "\n";
            }
            document.getElementById("result").innerText = result;
        }

        function processRecord(recType) {
            var thisYear = (new Date()).getFullYear();
            var recordsStartYear = (new Date(record.start)).getFullYear();

            if (recordsStartYear == thisYear) {
                stopTimer();
                finalizeRecord();
                record = initEmptyRecord();
                record.rType = recType;
                record.start = new Date();
            } else { //just starting
                record.rType = recType;
                record.start = new Date();
            } 
            startTimer();
            displayRecords();
        }

        function finalizeRecord() {
            record.end = new Date();
            record.durationString = convertSecondsIntoTimerString(totalSeconds);
            record.durationSeconds = totalSeconds;
            records.push(record);
        }

        function resetTimers() {
            stopTimer();
            finalizeRecord();
            displayRecords();
            record = initEmptyRecord();
            startTimer();
            $("#startWork").prop("disabled", false);
            $('#startFun').prop("disabled", false);

        }
    </script>
}